@model APPBASE.Models.ProductnewVM
@using APPBASE.Helpers
@using APPBASE.Svcbiz
@using APPBASE.Svcutil

@{string vsErrClass = "";}
@{string vsDisableButton = "";}
@{Boolean isShowDropdown = true;}
@{string vsReadonlyTextboxKey = "Readonly";}
@{string vsReadonlyTextbox = "";}
@if (ViewBag.CRUD_type == hlpFlags_CRUDOption.CREATE) { vsReadonlyTextboxKey = ""; }
@if ((ViewBag.CRUD_type == hlpFlags_CRUDOption.VIEW) || (ViewBag.CRUD_type == hlpFlags_CRUDOption.DELETE)) { vsDisableButton = "disabled"; vsReadonlyTextbox = "Readonly"; isShowDropdown = false; }
@{string vsDateFormat = "'alias': 'dd/mm/yyyy'";}

<div class="row">
    <div class="col-xs-12">
        @if (ViewData.ModelState["PRODNEW_OPENDT0"] != null) { vsErrClass = "has-error"; } else { vsErrClass = ""; }
        <div class="form-group @vsErrClass">
            <label for="PRODNEW_OPENDT">Tanggal Barang Datang</label>
            <input type="text" id="PRODNEW_OPENDT" name="PRODNEW_OPENDT" value="@Html.DisplayFor(model => model.PRODNEW_OPENDT)" class="form-control" @vsReadonlyTextbox data-inputmask="@vsDateFormat" data-mask />

            
            @if (ViewData.ModelState["PRODNEW_OPENDT1"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("PRODNEW_OPENDT1")
                    </label>
            }
            @if (ViewData.ModelState["PRODNEW_OPENDT2"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("PRODNEW_OPENDT2")
                    </label>
            }
        </div> <!-- /.form-group -->
    </div> <!-- /.col-xs-12 -->
</div><!-- /.row -->

<div class="row">
    <div class="col-xs-12">
        @if (ViewData.ModelState["STORAGE_ID0"] != null) { vsErrClass = "has-error"; } else { vsErrClass = ""; }
        <div class="form-group @vsErrClass">
            <label for="STORAGE_ID">Penyimpanan</label>
            <input type="text" id="STORAGE_ID" name="STORAGE_ID" class="form-control" value="@Model.STORAGE_NAME" readonly />

            @if (ViewData.ModelState["STORAGE_ID1"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("STORAGE_ID1")
                    </label>
            }
            @if (ViewData.ModelState["STORAGE_ID2"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("STORAGE_ID2")
                    </label>
            }
        </div> <!-- /.form-group -->
    </div> <!-- /.col-xs-12 -->
</div><!-- /.row -->

<div class="row">
    <div class="col-xs-12">
        @if (ViewData.ModelState["PRODNEW_DESC0"] != null) { vsErrClass = "has-error"; } else { vsErrClass = ""; }
        <div class="form-group @vsErrClass">
            <label for="PRODNEW_DESC">Keterangan</label>
            <input type="text" id="PRODNEW_DESC" name="PRODNEW_DESC" value="@Html.DisplayFor(model => model.PRODNEW_DESC)" class="form-control"  @vsReadonlyTextbox />

            @if (ViewData.ModelState["PRODNEW_DESC1"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("PRODNEW_DESC1")
                    </label>
            }
            @if (ViewData.ModelState["PRODNEW_DESC2"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("PRODNEW_DESC2")
                    </label>
            }
        </div> <!-- /.form-group -->
    </div> <!-- /.col-xs-12 -->
</div><!-- /.row -->
